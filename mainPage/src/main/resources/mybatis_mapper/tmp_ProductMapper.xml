<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.mainPage.mapper.tmp_ProductMapper">
    <resultMap id="BaseResultMap" type="com.project.mainPage.dto.tmp_Product">
        <id column="product_id" jdbcType="BIGINT" property="productId"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="product_intro" jdbcType="VARCHAR" property="productIntro"/>
        <result column="product_category_id" jdbcType="BIGINT" property="CategoryId"/>
        <result column="product_cover_img" jdbcType="VARCHAR" property="productCoverImg"/>
        <result column="original_price" jdbcType="INTEGER" property="originalPrice"/>
        <result column="selling_price" jdbcType="INTEGER" property="sellingPrice"/>
        <result column="stock_num" jdbcType="INTEGER" property="stockNum"/>
        <result column="tag" jdbcType="VARCHAR" property="tag"/>
        <result column="product_sell_status" jdbcType="TINYINT" property="productSellStatus"/>
        <result column="create_user" jdbcType="INTEGER" property="createUser"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_user" jdbcType="INTEGER" property="updateUser"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.project.mainPage.dto.tmp_Product">
        <result column="product_detail_content" jdbcType="LONGVARCHAR" property="productDetailContent"/>
    </resultMap>
    
    <sql id="Base_Column_List">
        product_id, product_name, product_intro,product_category_id, product_cover_img, original_price, selling_price, stock_num, tag, product_sell_status, create_user, create_time, UPDATE_user, UPDATE_time
    </sql>

    <sql id="Blob_Column_List">
        product_detail_content
    </sql>

    <insert id="batchINSERT">
        INSERT INTO TB_PRODUCT_INFO(product_name, product_intro, product_category_id,product_cover_img, product_detail_content,original_price, selling_price, stock_num)
            VALUES
            <foreach collection="ProductList" item="product" separator=",">
                (#{product.productName},
                #{product.productIntro},
                #{product.CategoryId},#{product.productCoverImg},
                #{product.productDetailContent},
                #{product.originalPrice},
                #{product.sellingPrice},
                #{product.stockNum})
            </foreach>
    </insert>
    
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        SELECT
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        FROM TB_PRODUCT_INFO
            WHERE product_id = #{productId,jdbcType=BIGINT}
    </select>

    <select id="selectByCategoryIdAndName" resultMap="ResultMapWithBLOBs">
        SELECT
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        FROM TB_PRODUCT_INFO
            WHERE product_name = #{productName,jdbcType=VARCHAR} 
            AND product_category_id = #{CategoryId,jdbcType=BIGINT}
    </select>
    
    <update id="updateStockNum">
        <foreach collection="StockNumS" item="StockNum" index="index" open="" close="" separator=";">
            UPDATE TB_PRODUCT_INFO
            <set>
                stock_num = stock_num - #{StockNum.productCount}
            </set>
            WHERE product_id = #{StockNum.productId} 
            AND stock_num>=#{StockNum.productCount} 
            AND product_sell_status = 0
        </foreach>
    </update>

    <update id="batchUpdateSellStatus">
        UPDATE TB_PRODUCT_INFO
            SET product_sell_status=#{sellStatus},
                UPDATE_time=now() 
            WHERE product_id IN
            <foreach item="id" collection="orderIds" open="(" separator="," close=")">
                #{id}
            </foreach>
    </update>
    
    <select id="selectByPrimaryKeys" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM TB_PRODUCT_INFO
            WHERE product_id IN
            <foreach item="id" collection="list" open="(" separator="," close=")">
                #{id}
            </foreach>
            ORDER BY field(product_id,
            <foreach item="id" collection="list" separator=",">
                #{id}
            </foreach>
            );
    </select>
    
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM TB_PRODUCT_INFO
            WHERE product_id = #{productId,jdbcType=BIGINT}
    </delete>
    
    <insert id="insert" parameterType="com.project.mainPage.dto.tmp_Product">
        INSERT INTO TB_PRODUCT_INFO (product_id, product_name, product_intro, product_cover_img, original_price, selling_price, stock_num, tag, product_sell_status, create_user, create_time, UPDATE_user, UPDATE_time, product_detail_content)
            VALUES (
                #{productId,jdbcType=BIGINT}, 
                #{productName,jdbcType=VARCHAR}, 
                #{productIntro,jdbcType=VARCHAR}, 
                #{productCoverImg,jdbcType=VARCHAR}, 
                #{originalPrice,jdbcType=INTEGER}, 
                #{sellingPrice,jdbcType=INTEGER}, 
                #{stockNum,jdbcType=INTEGER}, 
                #{tag,jdbcType=VARCHAR}, 
                #{productSellStatus,jdbcType=TINYINT}, 
                #{createUser,jdbcType=INTEGER}, 
                #{createTime,jdbcType=TIMESTAMP}, 
                #{UPDATEUser,jdbcType=INTEGER}, 
                #{updateTime,jdbcType=TIMESTAMP}, 
                #{productDetailContent,jdbcType=LONGVARCHAR}
            )
    </insert>
    
    <insert id="insertSelective" parameterType="com.project.mainPage.dto.tmp_Product">
        INSERT INTO TB_PRODUCT_INFO
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productId != null">
                product_id,
            </if>
            <if test="productName != null">
                product_name,
            </if>
            <if test="productIntro != null">
                product_intro,
            </if>
            <if test="CategoryId != null">
                product_category_id,
            </if>
            <if test="productCoverImg != null">
                product_cover_img,
            </if>
            <if test="originalPrice != null">
                original_price,
            </if>
            <if test="sellingPrice != null">
                selling_price,
            </if>
            <if test="stockNum != null">
                stock_num,
            </if>
            <if test="tag != null">
                tag,
            </if>
            <if test="productSellStatus != null">
                product_sell_status,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateUser != null">
                UPDATE_user,
            </if>
            <if test="updateTime != null">
                UPDATE_time,
            </if>
            <if test="productDetailContent != null">
                product_detail_content,
            </if>
        </trim>
    
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productId != null">
                #{productId,jdbcType=BIGINT},
            </if>
            <if test="productName != null">
                #{productName,jdbcType=VARCHAR},
            </if>
            <if test="productIntro != null">
                #{productIntro,jdbcType=VARCHAR},
            </if>
            <if test="productIntro != null">
                #{CategoryId,jdbcType=BIGINT},
            </if>
            <if test="productCoverImg != null">
                #{productCoverImg,jdbcType=VARCHAR},
            </if>
            <if test="originalPrice != null">
                #{originalPrice,jdbcType=INTEGER},
            </if>
            <if test="sellingPrice != null">
                #{sellingPrice,jdbcType=INTEGER},
            </if>
            <if test="stockNum != null">
                #{stockNum,jdbcType=INTEGER},
            </if>
            <if test="tag != null">
                #{tag,jdbcType=VARCHAR},
            </if>
            <if test="productSellStatus != null">
                #{productSellStatus,jdbcType=TINYINT},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                #{UPDATEUser,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="productDetailContent != null">
                #{productDetailContent,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    
    <update id="updateByPrimaryKeySelective" parameterType="com.project.mainPage.dto.tmp_Product">
        UPDATE TB_PRODUCT_INFO
        <set>
            <if test="productName != null">
                product_name = #{productName,jdbcType=VARCHAR},
            </if>
            <if test="productIntro != null">
                product_intro = #{productIntro,jdbcType=VARCHAR},
            </if>
            <if test="CategoryId != null">
                product_category_id = #{CategoryId,jdbcType=BIGINT},
            </if>
            <if test="productCoverImg != null">
                product_cover_img = #{productCoverImg,jdbcType=VARCHAR},
            </if>
            <if test="originalPrice != null">
                original_price = #{originalPrice,jdbcType=INTEGER},
            </if>
            <if test="sellingPrice != null">
                selling_price = #{sellingPrice,jdbcType=INTEGER},
            </if>
            <if test="stockNum != null">
                stock_num = #{stockNum,jdbcType=INTEGER},
            </if>
            <if test="tag != null">
                tag = #{tag,jdbcType=VARCHAR},
            </if>
            <if test="productSellStatus != null">
                product_sell_status = #{productSellStatus,jdbcType=TINYINT},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                UPDATE_user = #{UPDATEUser,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                UPDATE_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="productDetailContent != null">
                product_detail_content = #{productDetailContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        WHERE product_id = #{productId,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.project.mainPage.dto.tmp_Product">
        UPDATE TB_PRODUCT_INFO
            SET product_name = #{productName,jdbcType=VARCHAR},
                product_intro = #{productIntro,jdbcType=VARCHAR},
                product_cover_img = #{productCoverImg,jdbcType=VARCHAR},
                original_price = #{originalPrice,jdbcType=INTEGER},
                selling_price = #{sellingPrice,jdbcType=INTEGER},
                stock_num = #{stockNum,jdbcType=INTEGER},
                tag = #{tag,jdbcType=VARCHAR},
                product_sell_status = #{productSellStatus,jdbcType=TINYINT},
                create_user = #{createUser,jdbcType=INTEGER},
                create_time = #{createTime,jdbcType=TIMESTAMP},
                UPDATE_user = #{UPDATEUser,jdbcType=INTEGER},
                UPDATE_time = #{updateTime,jdbcType=TIMESTAMP},
                product_detail_content = #{productDetailContent,jdbcType=LONGVARCHAR}
            WHERE product_id = #{productId,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.project.mainPage.dto.tmp_Product">
        UPDATE TB_PRODUCT_INFO
            SET product_name = #{productName,jdbcType=VARCHAR},
                product_intro = #{productIntro,jdbcType=VARCHAR},
                product_cover_img = #{productCoverImg,jdbcType=VARCHAR},
                original_price = #{originalPrice,jdbcType=INTEGER},
                selling_price = #{sellingPrice,jdbcType=INTEGER},
                stock_num = #{stockNum,jdbcType=INTEGER},
                tag = #{tag,jdbcType=VARCHAR},
                product_sell_status = #{productSellStatus,jdbcType=TINYINT},
                create_user = #{createUser,jdbcType=INTEGER},
                create_time = #{createTime,jdbcType=TIMESTAMP},
                UPDATE_user = #{UPDATEUser,jdbcType=INTEGER},
                UPDATE_time = #{updateTime,jdbcType=TIMESTAMP}
            WHERE product_id = #{productId,jdbcType=BIGINT}
    </update>

    <select id="findProductList" parameterType="Map" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM TB_PRODUCT_INFO
        <where>
            <if test="productName!=null and productName!=''">
                AND product_name LIKE CONCAT('%','#{productName}','%')
            </if>
            <if test="productSellStatus!=null and productSellStatus!=''">
                AND product_sell_status = #{productSellStatus}
            </if>
            <if test="startTime != null and startTime.trim() != ''">
                AND create_time &gt; #{startTime}
            </if>
            <if test="endTime != null and endTime.trim() != ''">
                AND create_time &lt; #{endTime}
            </if>
        </where>
        ORDER BY product_id DESC
        <if test="start!=null and limit!=null">
            LIMIT #{start},#{limit}
        </if>
    </select>
	
	<select id="getTotalProduct" parameterType="Map" resultType="int">
        SELECT count(*) FROM TB_PRODUCT_INFO
        <where>
            <if test="productName!=null and productName!=''">
                AND product_name LIKE CONCAT('%','#{productName}','%')
            </if>
            <if test="productSellStatus!=null and productSellStatus!=''">
                AND product_sell_status = #{productSellStatus}
            </if>
            <if test="startTime != null and startTime.trim() != ''">
                AND create_time &gt; #{startTime}
            </if>
            <if test="endTime != null and endTime.trim() != ''">
                AND create_time &lt; #{endTime}
            </if>
        </where>
    </select>
    
	 <select id="findProductListBySearch" parameterType="Map" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM TB_PRODUCT_INFO
        <where>
            <if test="keyword!=null and keyword!=''">
                AND (product_name LIKE CONCAT('%',#{keyword},'%') or product_intro LIKE CONCAT('%',#{keyword},'%'))
            </if>
            <if test="CategoryId!=null and CategoryId!=''">
                AND product_category_id = #{CategoryId}
            </if>
            <if test="productSellStatus!=null">
                AND product_sell_status = #{productSellStatus}
            </if>
        </where>
        <if test="orderBy!=null and orderBy!=''">
            <choose>
                <when test="orderBy == 'new'">
                    <!-- 발행일을 역순으로 정렬 -->
                    ORDER BY product_id DESC
                </when>
                <when test="orderBy == 'price'">
                    <!-- 가격순으로 작은 것부터 큰 것 순으로 정렬 -->
                    ORDER BY selling_price ASC
                </when>
                <otherwise>
                    <!-- 재고 수량은 가장 큰 것부터 작은 것 순으로 정렬 -->
                    ORDER BY stock_num DESC
                </otherwise>
            </choose>
        </if>
        <if test="start!=null and limit!=null">
            LIMIT #{start},#{limit}
        </if>
    </select>

    <select id="getTotalProductBySearch" parameterType="Map" resultType="int">
        SELECT count(*) FROM TB_PRODUCT_INFO
        <where>
            <if test="keyword!=null and keyword!=''">
                AND (product_name LIKE CONCAT('%',#{keyword},'%') or product_intro LIKE CONCAT('%',#{keyword},'%'))
            </if>
            <if test="CategoryId!=null and CategoryId!=''">
                AND product_category_id = #{CategoryId}
            </if>
            <if test="productSellStatus!=null">
                AND product_sell_status = #{productSellStatus}
            </if>
        </where>
    </select>
</mapper>